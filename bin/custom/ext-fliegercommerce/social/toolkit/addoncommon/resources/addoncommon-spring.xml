<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2013 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/util
		   http://www.springframework.org/schema/util/spring-util-3.1.xsd">
		   
	<!-- Enable the @AspectJ support -->
	<aop:aspectj-autoproxy proxy-target-class="true"
	                       expose-proxy="true"/>

 	<bean id="listMergeBeanPostProcessor" class="com.hybris.addon.common.config.ListMergeDirectiveBeanPostProcessor" /> 
  	<bean id="listMergeDirective"  class="com.hybris.addon.common.config.ListMergeDirective" abstract="true" />	
  	<bean id="mapMergeBeanPostProcessor" class="com.hybris.addon.common.config.MapMergeDirectiveBeanPostProcessor" /> 
  	<bean id="mapMergeDirective"  class="com.hybris.addon.common.config.MapMergeDirective" abstract="true" /> 
  	
  	
  	
	<alias alias="mediaAbsoluteUrlResolver" name="defaultMediaAbsoluteUrlResolver" />
	<bean id="defaultMediaAbsoluteUrlResolver" class="com.hybris.addon.common.url.impl.DefaultMediaAbsoluteUrlResolver" >
		<property name="configurationService" ref="configurationService" />
	</bean>		
	
	<!--  Add UI Experience Configuration for all Stores -->
	<alias alias="supportedUiExperienceImpexMacroParameterPopulator" name="defaultSupportedUiExperienceImpexMacroParameterPopulator" />
 	<bean id="defaultSupportedUiExperienceImpexMacroParameterPopulator" class="com.hybris.addon.common.setup.populators.SupportedUiExperienceImpexMacroParameterPopulator">
		<property name="uiExperienceService" ref="uiExperienceService" />
		<property name="siteConfigService" ref="siteConfigService" />
		<property name="sessionService" ref="sessionService" />
		<property name="baseSiteService" ref="baseSiteService" />
	</bean>
	<bean parent="modifyPopulatorList">
		<property name="list" ref="selectedContentCatalogImpexMacroParametersPopulators"/>
		<property name="add" ref="supportedUiExperienceImpexMacroParameterPopulator"/>
	</bean>


	<alias name="addonCommonConfigDataImportService" alias="addonConfigDataImportService" />
	<bean id="addonCommonConfigDataImportService" parent="defaultAddonConfigDataImportService"
		class="com.hybris.addon.common.setup.impl.AddOnCommonConfigDataImportService" />

	<alias name="defaultAddonSampleDataImportService" alias="addonSampleDataImportService" />
	<bean id="defaultAddonSampleDataImportService" parent="abstractCoreSystemSetup" class="com.hybris.addon.common.setup.impl.DefaultAddonSampleDataImportService" /> 

	<bean id="abstractGenericAddOnSampleDataEventListener" abstract="true" class="com.hybris.addon.common.setup.impl.GenericAddOnSampleDataEventListener">
		<property name="addOnSampleDataImportService" ref="addonSampleDataImportService" />
		<property name="tenantService" ref="tenantService" />
		<property name="clusterService" ref="clusterService" />
	</bean>
	
	<!-- <bean id="addonResourceBundleSource" abstract="true" class="com.hybris.addon.common.config.bundlesources.DefaultAddonResourceBundleSource" /> -->
	<bean id="abstractJavaScriptMessageResourceAccessor" abstract="true" class="com.hybris.addon.common.config.bundlesources.DefaultJavaScriptMessageResourcesAccessor">
		<property name="cacheSeconds" value="#{configurationService.configuration.getProperty('storefront.resourceBundle.cacheSeconds')}"/>
		<property name="resourceLoader">
			<bean class="org.springframework.core.io.FileSystemResourceLoader"/>
		</property>
		<property name="fallbackToSystemLocale" value="false"/>
	</bean>
	
	<bean id="categoryFrontendUrlAntPathPattern" class="java.lang.String">
		<constructor-arg><value><![CDATA[/**/c/{code}]]></value></constructor-arg>
	</bean>
	
	<alias name="defaultCategoryFrontendPathMatcherUrlDecoder" alias="categoryFrontendPathMatcherUrlDecoder" />
	<bean id="defaultCategoryFrontendPathMatcherUrlDecoder" class="com.hybris.addon.common.url.impl.CategoryFrontendPathMatcherUrlDecoder" >
		<property name="pathMatcher" >
			<bean class="org.springframework.util.AntPathMatcher"/>
		</property>	
		<property name="categoryService" ref="categoryService" />
		<property name="pathMatchPattern" ref="categoryFrontendUrlAntPathPattern" />
	</bean>
	
	<bean id="productFrontendUrlAntPathPattern" class="java.lang.String">
		<constructor-arg><value><![CDATA[/**/p/{code}]]></value></constructor-arg>
	</bean>
	
	<alias name="defaultProductFrontendPathMatcherUrlDecoder" alias="productFrontendPathMatcherUrlDecoder" />
	<bean id="defaultProductFrontendPathMatcherUrlDecoder" class="com.hybris.addon.common.url.impl.ProductFrontendPathMatcherUrlDecoder" >
		<property name="pathMatcher" >
			<bean class="org.springframework.util.AntPathMatcher"/>
		</property>		
		<property name="productService" ref="productService" />
		<property name="pathMatchPattern" ref="productFrontendUrlAntPathPattern" /> 
	</bean>
	
	<bean id="categoryFrontendUrlRegexPattern" class="java.lang.String">
		<constructor-arg><value><![CDATA[(?<=/c/)[\.\:\,\*\(\!\'\)\/\\\$\%\+\-\_\#\’A-z0-9]{0,}[^(\?|\&|\;|$)]]]></value></constructor-arg>
	</bean>
	<alias name="defaultCategoryFrontendRegexUrlDecoder" alias="categoryFrontendRegexUrlDecoder" />
	<alias name="defaultCategoryFrontendRegexUrlDecoder" alias="categoryFrontendUrlDecoder" />
	<bean id="defaultCategoryFrontendRegexUrlDecoder" class="com.hybris.addon.common.url.impl.CategoryFrontendRegexUrlDecoder" >
		<property name="categoryService" ref="categoryService" />
		<property name="regex" ref="categoryFrontendUrlRegexPattern" />
	</bean>

	<bean id="productFrontendUrlRegexPattern" class="java.lang.String">
		<constructor-arg><value><![CDATA[(?<=/p/)[\.\:\,\*\(\!\'\)\/\\\$\%\+\-\_\#\’A-z0-9]{0,}[^(\?|\&|\;|$)]]]></value></constructor-arg>
	</bean>
	<alias name="defaultProductFrontendRegexUrlDecoder" alias="productFrontendRegexUrlDecoder" />	
	<alias name="defaultProductFrontendRegexUrlDecoder" alias="productFrontendUrlDecoder" />
	<bean id="defaultProductFrontendRegexUrlDecoder" class="com.hybris.addon.common.url.impl.ProductFrontendRegexUrlDecoder" >
		<property name="productService" ref="productService" />
		<property name="regex" ref="productFrontendUrlRegexPattern" />	
	</bean>

	<bean id="abstractConfigurablePopulatingConverter" class="com.hybris.addon.common.converters.impl.AbstractConfigurablePopulatingConverter" abstract="true"/>
	<bean id="configurablePopulatorAdapter" class="com.hybris.addon.common.converters.impl.ConfigurablePopulatorAdapter" abstract="true"/>

	<util:list id="addonContentCatalogSyncRootTypeCodes"/>
	<util:list id="addonProductCatalogSyncRootTypeCodes" />
	<util:map id="addonContentCatalogEditedSyncDescriptors" key-type="java.lang.Class" value-type="java.util.List" />
	<util:map id="addonProductCatalogEditedSyncDescriptors" key-type="java.lang.Class" value-type="java.util.List" />
	
	<bean id="setupContentSyncJobAdvice" class="com.hybris.addon.common.setup.SyncJobSetupAdvice">
		<property name="rootTypeCodes" ref="addonContentCatalogSyncRootTypeCodes" />
		<property name="editedSyncDescriptors" ref="addonContentCatalogEditedSyncDescriptors" />
	</bean>
	
	<bean id="setupProductSyncJobAdvice" class="com.hybris.addon.common.setup.SyncJobSetupAdvice">
		<property name="rootTypeCodes" ref="addonProductCatalogSyncRootTypeCodes" />
		<property name="editedSyncDescriptors" ref="addonProductCatalogEditedSyncDescriptors" />
	</bean>
	
	
	<aop:config proxy-target-class="true">
  		<aop:aspect id="setupContentSyncJobAspect" ref="setupContentSyncJobAdvice" >
    	  <aop:pointcut id="setupContentSyncJobPointcut" 
	      	expression="execution(* de.hybris.platform.acceleratorservices.setup.SetupSyncJobService.createContentCatalogSyncJob(..))" />  
	      <aop:after-returning method="setup" pointcut-ref="setupContentSyncJobPointcut"/>	            
  		</aop:aspect>
	</aop:config>
	
	<aop:config proxy-target-class="true">
  		<aop:aspect id="setupProductSyncJobAspect" ref="setupProductSyncJobAdvice" >
    	  <aop:pointcut id="setupProductSyncJobPointcut" 
	      	expression="execution(* de.hybris.platform.acceleratorservices.setup.SetupSyncJobService.createProductCatalogSyncJob(..))" />  	 
	      <aop:after-returning method="setup" pointcut-ref="setupProductSyncJobPointcut"/>	            	           
  		</aop:aspect>
	</aop:config>
	
	<alias name="legacyModeSwitchableSetupImpexService" alias="setupImpexService"/>
	<bean id="legacyModeSwitchableSetupImpexService" class="com.hybris.addon.common.setup.impl.LegacyModeSwitchableSetupImpexService" parent="defaultSetupImpexService" >
		<property name="configurationService" ref="configurationService"/>
	</bean>
	
	<alias name="legacyModeSwitchableSetupImpexAddonService" alias="setupImpexAddonService" />
	<bean id="legacyModeSwitchableSetupImpexAddonService" class="com.hybris.addon.common.setup.impl.LegacyModeSwitchableSetupImpexAddOnService" parent="defaultSetupImpexAddonService" >
		<property name="configurationService" ref="configurationService"/>
 	</bean>
			
	<!-- List of tag data attribute providers -->
	<util:list id="tagDataAttributesProviders" value-type="com.hybris.addon.common.config.cms.dataattributeproviders.TagDataAttributesProvider"/>
			
</beans>